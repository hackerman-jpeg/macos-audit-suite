name: Auto Tag & Release

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "README.md"
      - "README.MD"
      - "readme.md"
      - "docs/**"

  # Manual button in the Actions tab
  workflow_dispatch:

permissions:
  contents: write   # required to create tags/releases and upload assets

jobs:
  build-and-release:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # needed so git archive has full tree and tags can be created

      - name: Compute tag & names (CalVer + short SHA)
        id: vars
        shell: bash
        run: |
          DATE_TAG="v$(date -u +'%Y.%m.%d')-${GITHUB_SHA::7}"
          echo "tag=$DATE_TAG" >> "$GITHUB_OUTPUT"
          echo "rel_name=macOS Audit Suite $DATE_TAG" >> "$GITHUB_OUTPUT"
          echo "bundle_name=macos_audit_suite_${DATE_TAG}" >> "$GITHUB_OUTPUT"

      - name: Set up Python (lint smoke test only)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Lint / syntax smoke test
        run: |
          python -m pip install --upgrade pip
          pip install flake8 || true
          flake8 --max-line-length=120 || true
          python -m py_compile ai_audit_agent.py stig_runner.py || true

      # Build artifacts:
      #  1) Source snapshot exactly as in repo at this commit (auto-includes new files)
      #  2) Runtime bundle (everything except CI files / .git and optionally huge models)
      - name: Package release bundles
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist

          # 1) Source archive (authoritative snapshot)
          git archive --format=zip --worktree-attributes -o "dist/${{ steps.vars.outputs.bundle_name }}_src.zip" HEAD .

          # 2) Runtime bundle (rsync lets us exclude)
          mkdir -p bundle
          rsync -a \
            --exclude ".git" \
            --exclude ".github" \
            --exclude "dist" \
            --exclude ".venv" \
            --exclude "__pycache__" \
            --exclude "*.gguf" \
            ./ bundle/

          # make shell helpers executable if present
          chmod +x bundle/*.sh 2>/dev/null || true
          (cd bundle && zip -r "../dist/${{ steps.vars.outputs.bundle_name }}.zip" .)

          # Optional: attach any STIG XMLs separately for convenience
          if ls *.xml *.xccdf.xml >/dev/null 2>&1; then
            mkdir -p dist/stigs && cp *.xml *.xccdf.xml dist/stigs/ 2>/dev/null || true
            (cd dist/stigs && zip -r "../${{ steps.vars.outputs.bundle_name }}_stigs.zip" .)
          fi

      # Create or update the release for this computed tag
      # softprops/action-gh-release handles "update if exists" and uploads files
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: ${{ steps.vars.outputs.rel_name }}
          make_latest: true
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/${{ steps.vars.outputs.bundle_name }}.zip
            dist/${{ steps.vars.outputs.bundle_name }}_src.zip
            dist/${{ steps.vars.outputs.bundle_name }}_stigs.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
